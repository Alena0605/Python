"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class NotNumber(Exception):
    def __init__(self, error):
        self.text = error


user_list = []
while True:
    user_data = input('Введите число или "stop", чтобы выйти: ')
    try:
        if user_data == 'stop':
            print(user_list)
            break
        elif user_data.isdigit():
            user_list.append(int(user_data))
        else:
            raise NotNumber('Ошибка! Вы ввели не число.')
    except NotNumber as er:
        print(er)
